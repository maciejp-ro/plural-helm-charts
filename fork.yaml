---
# Source: yugabyte/templates/service.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: yb-master-pdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:      
      app: "yb-master"
---
# Source: yugabyte/templates/service.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: yb-tserver-pdb
spec:
  maxUnavailable: 1
  selector:
    matchLabels:      
      app: "yb-tserver"
---
# Source: yugabyte/templates/service.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: "yb-masters"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 7000
    - name: "tcp-rpc-port"
      port: 7100
  selector:    
    app: "yb-master"
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-tservers"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 9000
    - name: "http-ycql-met"
      port: 12000
    - name: "http-yedis-met"
      port: 11000
    - name: "http-ysql-met"
      port: 13000
    - name: "tcp-rpc-port"
      port: 9100
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
  selector:    
    app: "yb-tserver"
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-master"
  namespace: "yugabyte"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-masters"
  podManagementPolicy: Parallel
  
  replicas: 3
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      
      partition: 0
      
  selector:
    matchLabels:      
      app: "yb-master"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-master"        
        heritage: "Helm"
        release: "yugabyte"
        chart: "yugabyte"
        component: "yugabytedb"
    spec: # yb-masters
      terminationGracePeriodSeconds: 300
      affinity:
        # Set the anti-affinity selector scope to YB masters.
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "yb-master"
              topologyKey: kubernetes.io/hostname
      containers:
      - name: "yb-master"
        image: "yugabytedb/yugabyte:2.5.1.0-b153"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        resources:
        
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 2
            memory: 2Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local" \
                --port="7100"
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local:7100" \
                --port="7100"
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="0.0.0.0" \
                --port="7000"
            fi && \
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            exec ${k8s_parent} /home/yugabyte/bin/yb-master \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --master_addresses=yb-master-0.yb-masters.$(NAMESPACE).svc.cluster.local:7100,yb-master-1.yb-masters.$(NAMESPACE).svc.cluster.local:7100,yb-master-2.yb-masters.$(NAMESPACE).svc.cluster.local:7100 \
              --replication_factor=3 \
              --enable_ysql=true \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=1824522240 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --default_memory_limit_to_ram_ratio="0.85" \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --rpc_bind_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local \
              --server_broadcast_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local:7100 \
              --webserver_interface=0.0.0.0
        ports:
          - containerPort: 7000
            name: "http-ui"
          - containerPort: 7100
            name: "tcp-rpc-port"
        volumeMounts:
          
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-master-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.5.1.0-b153"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores

      volumes:
        
        - name: datadir0
          hostPath:
            path: /mnt/disks/ssd0
        - name: datadir1
          hostPath:
            path: /mnt/disks/ssd1
        - name: yb-master-yugabyte-tls-cert
          secret:
            secretName: yb-master-yugabyte-tls-cert
            items:
              - key: tls.crt
                path: node.yb-master-0.yb-masters.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-master-0.yb-masters.yugabyte.svc.cluster.local.key
              - key: tls.crt
                path: node.yb-master-1.yb-masters.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-master-1.yb-masters.yugabyte.svc.cluster.local.key
              - key: tls.crt
                path: node.yb-master-2.yb-masters.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-master-2.yb-masters.yugabyte.svc.cluster.local.key
              - key: ca.crt
                path: ca.crt
            defaultMode: 256
        - name: yugabyte-tls-client-cert
          secret:
            secretName: yugabyte-tls-client-cert
            items:
              - key: ca.crt
                path: root.crt
              - key: tls.crt
                path: yugabytedb.crt
              - key: tls.key
                path: yugabytedb.key
            defaultMode: 256
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-tserver"
  namespace: "yugabyte"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-tservers"
  podManagementPolicy: Parallel
  
  replicas: 3
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      
      partition: 0
      
  selector:
    matchLabels:      
      app: "yb-tserver"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-tserver"        
        heritage: "Helm"
        release: "yugabyte"
        chart: "yugabyte"
        component: "yugabytedb"
    spec: # yb-tservers
      terminationGracePeriodSeconds: 300
      affinity:
        # Set the anti-affinity selector scope to YB masters.
        
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "yb-tserver"
              topologyKey: kubernetes.io/hostname
      containers:
      - name: "yb-tserver"
        image: "yugabytedb/yugabyte:2.5.1.0-b153"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        - name: SSL_CERTFILE
          value: /root/.yugabytedb/root.crt
        resources:
        
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            touch "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local" \
                --port="9100"
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local:9100" \
                --port="9100"
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="0.0.0.0" \
                --port="9000"
            fi && \
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local" \
                --port="9042"
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                --addr="0.0.0.0:5433" \
                --port="5433"
            fi && \
            exec ${k8s_parent} /home/yugabyte/bin/yb-tserver \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --tserver_master_addrs=yb-master-0.yb-masters.$(NAMESPACE).svc.cluster.local:7100,yb-master-1.yb-masters.$(NAMESPACE).svc.cluster.local:7100,yb-master-2.yb-masters.$(NAMESPACE).svc.cluster.local:7100 \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=3649044480 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --use_node_hostname_for_local_tserver=true \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --use_client_to_server_encryption=true \
              --certs_for_client_dir=/opt/certs/yugabyte \
              --rpc_bind_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local \
              --server_broadcast_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local:9100 \
              --webserver_interface=0.0.0.0 \
              --enable_ysql=true \
              --pgsql_proxy_bind_address=0.0.0.0:5433 \
              --cql_proxy_bind_address=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.local
        ports:
          - containerPort: 9000
            name: "http-ui"
          - containerPort: 12000
            name: "http-ycql-met"
          - containerPort: 11000
            name: "http-yedis-met"
          - containerPort: 13000
            name: "http-ysql-met"
          - containerPort: 9100
            name: "tcp-rpc-port"
          - containerPort: 6379
            name: "tcp-yedis-port"
          - containerPort: 9042
            name: "tcp-yql-port"
          - containerPort: 5433
            name: "tcp-ysql-port"
        volumeMounts:
          
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-tserver-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.5.1.0-b153"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores

      volumes:
        
        - name: datadir0
          hostPath:
            path: /mnt/disks/ssd0
        - name: datadir1
          hostPath:
            path: /mnt/disks/ssd1
        - name: yb-tserver-yugabyte-tls-cert
          secret:
            secretName: yb-tserver-yugabyte-tls-cert
            items:
              - key: tls.crt
                path: node.yb-tserver-0.yb-tservers.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-tserver-0.yb-tservers.yugabyte.svc.cluster.local.key
              - key: tls.crt
                path: node.yb-tserver-1.yb-tservers.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-tserver-1.yb-tservers.yugabyte.svc.cluster.local.key
              - key: tls.crt
                path: node.yb-tserver-2.yb-tservers.yugabyte.svc.cluster.local.crt
              - key: tls.key
                path: node.yb-tserver-2.yb-tservers.yugabyte.svc.cluster.local.key
              - key: ca.crt
                path: ca.crt
            defaultMode: 256
        - name: yugabyte-tls-client-cert
          secret:
            secretName: yugabyte-tls-client-cert
            items:
              - key: ca.crt
                path: root.crt
              - key: tls.crt
                path: yugabytedb.crt
              - key: tls.key
                path: yugabytedb.key
            defaultMode: 256
---
# Source: yugabyte/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: yugabyte
  labels:
    
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "yugabyte.kubeflow-aws.com"
      secretName: yugabyte-tls
  rules:
    - host: "yugabyte.kubeflow-aws.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: yb-masters
                port:
                  number: 7000
---
# Source: yugabyte/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yugabyte-ca
  namespace: "yugabyte"
spec:
  isCA: true
  privateKey:
    algorithm: "ECDSA"
    encoding: PKCS8
    size: 521
  commonName: Yugabyte Selfsigned CA
  secretName: yugabyte-ca
  issuerRef:
    name: "yugabyte-selfsigned-bootstrap"
    kind: Issuer
---
# Source: yugabyte/templates/certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-master-yugabyte-tls-cert
  namespace: "yugabyte"
spec:
  secretTemplate:
    labels:      
      app: "yb-master"      
      heritage: "Helm"
      release: "yugabyte"
      chart: "yugabyte"
      component: "yugabytedb"
  issuerRef:
    name:  "yugabyte-selfsigned"
    kind: Issuer
  secretName: yb-master-yugabyte-tls-cert
  duration: "2160h"
  renewBefore: "360h"
  commonName: yugabyte-yb-masters
  isCA: false
  privateKey:
    algorithm: "ECDSA"
    encoding: PKCS8
    size: 521
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
  - yb-master-0.yb-masters.yugabyte.svc.cluster.local
  - yb-master-1.yb-masters.yugabyte.svc.cluster.local
  - yb-master-2.yb-masters.yugabyte.svc.cluster.local
  uris: []
  ipAddresses: []
---
# Source: yugabyte/templates/certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-tserver-yugabyte-tls-cert
  namespace: "yugabyte"
spec:
  secretTemplate:
    labels:      
      app: "yb-tserver"      
      heritage: "Helm"
      release: "yugabyte"
      chart: "yugabyte"
      component: "yugabytedb"
  issuerRef:
    name:  "yugabyte-selfsigned"
    kind: Issuer
  secretName: yb-tserver-yugabyte-tls-cert
  duration: "2160h"
  renewBefore: "360h"
  commonName: yugabyte-yb-tservers
  isCA: false
  privateKey:
    algorithm: "ECDSA"
    encoding: PKCS8
    size: 521
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
  - yb-tserver-0.yb-tservers.yugabyte.svc.cluster.local
  - yb-tserver-1.yb-tservers.yugabyte.svc.cluster.local
  - yb-tserver-2.yb-tservers.yugabyte.svc.cluster.local
  uris: []
  ipAddresses: []
---
# Source: yugabyte/templates/certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yugabyte-tls-client-cert
  namespace: "yugabyte"
spec:
  secretTemplate:
    labels:      
      heritage: "Helm"
      release: "yugabyte"
      chart: "yugabyte"
      component: "yugabytedb"
  issuerRef:
    name:  "yugabyte-selfsigned"
    kind: Issuer
  secretName:  yugabyte-tls-client-cert
  duration: "2160h"
  renewBefore: "360h"
  commonName: yugabyte
  isCA: false
  privateKey:
    algorithm: "ECDSA"
    encoding: PKCS8
    size: 521
  usages:
    - client auth
  dnsNames: []
  uris: []
  ipAddresses: []
---
# Source: yugabyte/templates/certificates.yaml
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name:  "yugabyte-selfsigned-bootstrap"
  namespace: "yugabyte"
spec:
  selfSigned: {}
---
# Source: yugabyte/templates/certificates.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: "yugabyte-selfsigned"
  namespace: "yugabyte"
spec:
  ca:
    secretName: yugabyte-ca
---
# Source: yugabyte/templates/master-servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: yugabyte-yb-master
  labels:
    app: "yb-master"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  jobLabel: "release"
  selector:
    matchLabels:
      app: "yb-master"
      release: "yugabyte"
      service-type: "headless"
  endpoints:
  - port: http-ui
    path: /prometheus-metrics
    interval: 30s
    relabelings:
    - targetLabel: "group"
      replacement: "yb-master"
    - targetLabel: "export_type"
      replacement: "master_export"
    - targetLabel: "node_prefix"
      replacement: "yugabyte"
    metricRelabelings:
    - regex: (.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: saved_name
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: server_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $2
      sourceLabels:
      - __name__
      targetLabel: service_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: $3
      sourceLabels:
      - __name__
      targetLabel: service_method
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: rpc_latency$4
      sourceLabels:
      - __name__
      targetLabel: __name__
---
# Source: yugabyte/templates/tserver-servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: yugabyte-yb-tserver
  labels:
    app: "yb-tserver"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  jobLabel: "release"
  selector:
    matchLabels:
      app: "yb-tserver"
      release: "yugabyte"
      service-type: "headless"
  endpoints:
  - port: http-ui
    path: /prometheus-metrics
    interval: 30s
    relabelings:
    - targetLabel: "group"
      replacement: "yb-tserver"
    - targetLabel: "export_type"
      replacement: "tserver_export"
    - targetLabel: "node_prefix"
      replacement: "yugabyte"
    metricRelabelings:
    - regex: (.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: saved_name
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: server_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $2
      sourceLabels:
      - __name__
      targetLabel: service_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: $3
      sourceLabels:
      - __name__
      targetLabel: service_method
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: rpc_latency$4
      sourceLabels:
      - __name__
      targetLabel: __name__
  - port: http-ycql-met
    path: /prometheus-metrics
    interval: 30s
    relabelings:
    - targetLabel: "group"
      replacement: "ycql"
    - targetLabel: "export_type"
      replacement: "cql_export"
    - targetLabel: "node_prefix"
      replacement: "yugabyte"
    metricRelabelings:
    - regex: (.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: saved_name
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: server_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $2
      sourceLabels:
      - __name__
      targetLabel: service_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: $3
      sourceLabels:
      - __name__
      targetLabel: service_method
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: rpc_latency$4
      sourceLabels:
      - __name__
      targetLabel: __name__
  - port: http-ysql-met
    path: /prometheus-metrics
    interval: 30s
    relabelings:
    - targetLabel: "group"
      replacement: "ysql"
    - targetLabel: "export_type"
      replacement: "ysql_export"
    - targetLabel: "node_prefix"
      replacement: "yugabyte"
    metricRelabelings:
    - regex: (.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: saved_name
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: server_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $2
      sourceLabels:
      - __name__
      targetLabel: service_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: $3
      sourceLabels:
      - __name__
      targetLabel: service_method
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: rpc_latency$4
      sourceLabels:
      - __name__
      targetLabel: __name__
  - port: http-yedis-met
    path: /prometheus-metrics
    interval: 30s
    relabelings:
    - targetLabel: "group"
      replacement: "yedis"
    - targetLabel: "export_type"
      replacement: "redis_export"
    - targetLabel: "node_prefix"
      replacement: "yugabyte"
    metricRelabelings:
    - regex: (.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: saved_name
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $1
      sourceLabels:
      - __name__
      targetLabel: server_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(.*)
      replacement: $2
      sourceLabels:
      - __name__
      targetLabel: service_type
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: $3
      sourceLabels:
      - __name__
      targetLabel: service_method
    - regex: handler_latency_(yb_[^_]*)_([^_]*)_([^_]*)(_sum|_count)?
      replacement: rpc_latency$4
      sourceLabels:
      - __name__
      targetLabel: __name__
